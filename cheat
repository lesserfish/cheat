#!/bin/bash

# if i switch to C, C++ i can use ncurses and have like a SHIT ton more of control. Is it worth it?
#

COLOR='\033[1;33m' # yellow
NC='\033[0m' # No Color

print_help(){
	echo "Cheat is for cheat-sheet. Basically a more simple version of man, which you usually update by yourself."
	echo "Usage is as follows: "
	echo 
	echo "cheat [command] [paramater] [options]"
	echo
	echo
	echo "List of commands:"
	echo "read - parameter [0] will be read."
	echo "write | add - Creates a new file with the parameter being a text file containing the information to be displayed. Parameters are [0] = File to be added"
	echo "append - Appends file [1] to the existent file [0]. Parameters are [0] [1] [options]"
	echo "destroy | rm | remove - Destroys file [0]"
	echo "update - Destroys the file [0] and creates file [1] with the same name."
	echo "list | ls- Lists all of the files"
	echo "ll - Prints each of the files along with the first line of each of them"
	echo "git - Perform a git command on the directory .cheat/.git"
	echo
}

read()
{
	if [[ $1 == "" ]]
	then
		echo "Please add an argument to be read!"
		exit 1
	fi

	if [[ ! -d "$HOME/.cheat" ]]
	then
		mkdir "$HOME/.cheat"
		echo "The file does not exist!"
		exit 1
	else
		if [[ ! -f "$HOME/.cheat/$1.cheat" ]]
		then
			echo "The file does not exist!"
			print_help
			exit 1
		else
			cat "$HOME/.cheat/$1.cheat"
		fi
	fi
}
write()
{
	if [[ $1 == "" ]]
	then
		echo "Please add a file as input!"
		exit 1
	fi

	if [[ ! -d "$HOME/.cheat" ]]
	then
		mkdir "$HOME/.cheat"
	fi

	if [[ ! -f "$PWD/$1" ]]
	then
		echo "File $1 does not exist"
		exit 1
	elif [[ -f "$HOME/.cheat/$1.cheat" ]]
	then
		echo "File $1 already exists in $HOME/.cheat. Either update or rewrite it!"
		exit 1
	else
		cat "$PWD/$1" > "$HOME/.cheat/$1.cheat"
	fi
}
update()
{
	if [[ $1 == "" ]]
	then
		echo "Please add a file as input!"
		exit 1
	fi

	if [[ ! -d "$HOME/.cheat" ]]
	then
		mkdir "$HOME/.cheat"
	fi
	
	if [[ $2 == "" ]]
	then
		if [[ ! -f "$PWD/$1" ]]
		then
			echo "$File $1 does not exist"
			exit 1
		else
			cat "$PWD/$1" > "$HOME/.cheat/$1.cheat"
		fi
	else
		if [[ ! -f "$PWD/$2" ]]
		then
			echo "File $2 does not exist"
		else
			cat "$PWD/$2" > "$HOME/.cheat/$1.cheat"
		fi
	fi
}
append()
{
	if [[ $1 == "" ]]
	then
		echo "Please add a file as input!"
		exit 1
	fi

	if [[ ! -d "$HOME/.cheat" ]]
	then
		mkdir "$HOME/.cheat"
	fi
	
	if [[ $2 == "" ]]
	then
		if [[ ! -f "$PWD/$1" ]]
		then
			echo "File $1 does not exist"
		else
			cat "$PWD/$1" >> "$HOME/.cheat/$1.cheat"
		fi
	else
		if [[ ! -f "$PWD/$2" ]]
		then
			echo "File $2 does not exist"
		else
			cat "$PWD/$2" >> "$HOME/.cheat/$1.cheat"
		fi
	fi
}
destroy()
{
	if [[ $1 = "" ]]
	then
		echo "Please specify a file to delete!"
		exit 1
	fi

	if [[ -f "$HOME/.cheat/$1.cheat" ]]
	then
		rm -f "$HOME/.cheat/$1.cheat"
	else
		echo "File $HOME/.cheat/$1 does not exist"
	fi
}
list()
{
	if [[ ! -d "$HOME/.cheat" ]]
	then
		echo "No files exist!"
	else
		cols=$(tput cols)
		( 	cd "$HOME/.cheat" ; 
			
			CLEN=0
			for f in *.cheat; do {
				FNAME="${f%%.cheat}"
				FNAMELEN="${#FNAME}"
				CLEN=$(($CLEN+$FNAMELEN+4))
				if [[ $CLEN -gt $cols ]]
				then
					printf "\n"
					CLEN=0
				fi
				printf "${COLOR}${FNAME}${NC}    "
	   			} 
		done 
		printf "\n"
		)
	fi
}
listext()
{

	if [[ ! -d "$HOME/.cheat" ]]
	then
		echo "No files exist!"
	else
		cols=$(tput cols)
		( 	cd "$HOME/.cheat" ; 
			
			for f in *.cheat; do {
				FNAME="${f%%.cheat}"
				printf "${COLOR}${FNAME}${NC}    "
				head -1 "${f}"
				printf "\n"
	   			} 
		done 
		printf "\n"
		)
	fi
}
sendgit()
{
	if [[ ! -d "$HOME/.cheat" ]]
	then
		mkdir "$HOME/.cheat"
	fi
	
	echo $@
	( cd "$HOME/.cheat" ; git "$@" )
}

if [[ $1 == "--help" || $1 == "" ]]
then
	print_help
elif [[  $1 == "read" ]]
then
	read $2
elif [[ $1 == "append" ]]
then
	append $2 $3
elif [[ $1 == "write" || $1 == "add" ]]
then
	write $2
elif [[ $1 == "destroy" || $1 == "rm" || $1 == "remove" ]]
then
	destroy $2
elif [[ $1 == "update" ]]
then
	update $2 $3
elif [[ $1 == "list" || $1 == "ls" ]]
then
	list
elif [[ $1 == "ll" ]]
then
	listext
elif [[ $1 == "git" ]]
then
	shift; sendgit "$@"
else
	read $1
fi

